# password complexity checker
import re

def check_password_strength(password):
    score = 0
    feedback = []

    if len(password) < 8:
        feedback.append("Password should be at least 8 characters long.")
    elif len(password) > 20:
        feedback.append("Password is too long. Maximum 20 characters recommended.")
    else:
        score += 1  # Increment score for adequate length

    if re.search(r"[A-Z]", password):
        score += 1
    else:
        feedback.append("Password should contain at least one uppercase letter.")

    if re.search(r"[a-z]", password):
        score += 1
    else:
        feedback.append("Password should contain at least one lowercase letter.")

    if re.search(r"\d", password):
        score += 1
    else:
        feedback.append("Password should contain at least one digit.")

    if re.search(r"[!@#$%^&*()_+=\-{}[\]:\"|;'<>?,.\/]", password):
        score += 1
    else:
        feedback.append("Password should contain at least one special character.")

    # Determine strength level
    if score < 3:
        strength = "Weak"
    elif score < 5:
        strength = "Moderate"
    else:
        strength = "Strong"

    return strength, feedback

# Function to take password input from user
def get_password_from_user():
    while True:
        password = input("Enter your password: ").strip()
        if password:
            return password
        print("Password cannot be empty. Please enter a valid password.")

# check password strength
def main():
    password = get_password_from_user()
    strength, feedback = check_password_strength(password)

    print(f"Password Strength: {strength}")
    if feedback:
        print("Feedback:")
        for message in feedback:
            print(f"- {message}")

if __name__ == "__main__":
    main()
